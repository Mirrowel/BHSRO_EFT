local class = zzz_efth_lua.class
	
-- Base on Arti's `speed.script`

class "CMovement"
{
	
	DEFAULT_MOD_RUN 	= 0,
	DEFAULT_MOD_RUNBACK = 0,
	DEFAULT_MOD_SPRINT	= 0,
	
	INITIALIZED = false,
	
	SpeedModifiers = {
		Run    = {},
		Sprint = {},
	},
	
	Initialize = function()
		CMovement.DEFAULT_MOD_RUN = db.actor:get_actor_run_coef()
		CMovement.DEFAULT_MOD_RUNBACK = db.actor:get_actor_runback_coef()
		CMovement.DEFAULT_MOD_SPRINT = db.actor:get_actor_sprint_koef()

		CMovement.INITIALIZED = true
	end;
	
	UpdateModifiers = function()
		
		-- Initialized if not yet
		if (CMovement.INITIALIZED == false) then
			CMovement.Initialize()
		end
		
		-- Speed modifiers
		local mod_run = 1
		local mod_sprint = 1
		
		-- Accumulate modifiers
		for key, mod in pairs(CMovement.SpeedModifiers.Run) do
			mod_run = mod_run * mod
		end
		
		for key, mod in pairs(CMovement.SpeedModifiers.Sprint) do
			mod_sprint = mod_sprint * mod
		end
		
		printf("SPEEDS MOD " .. mod_run)
		
		-- Clamp modifiers
		local coeff_run 	= clamp(CMovement.DEFAULT_MOD_RUN * mod_run, 1, 10)
		local coeff_runback = clamp(CMovement.DEFAULT_MOD_RUNBACK * mod_run, 1, 10)
		local coeff_sprint  = clamp(CMovement.DEFAULT_MOD_SPRINT * mod_sprint, 1, 10)
		
		-- Set modifiers
		db.actor:set_actor_run_coef(coeff_run)
		db.actor:set_actor_runback_coef(coeff_runback)
		db.actor:set_actor_sprint_koef(coeff_sprint)
		
	end;
	
	-- ======================= RUN / RUNBACK =======================
		
	AddSpeed = function(id, speed)
		CMovement.SpeedModifiers.Run["efth_speed_" .. id] = speed
		CMovement.UpdateModifiers()
	end;
	
	RemoveSpeed = function(id)
		CMovement.SpeedModifiers.Run["efth_speed_" .. id] = nil
		CMovement.UpdateModifiers()
	end;
	
	
	-- ======================= SPRINT ===============================
	
	EnableSprint = function()
		db.actor:allow_sprint(true)
	end;
	
	DisableSprint = function()
		db.actor:allow_sprint(false)
	end;
	
	AddSpeedSprint = function(id, speed)
		CMovement.SpeedModifiers.Sprint["efth_speed_" .. id] = speed
		CMovement.UpdateModifiers()
	end;
	
	RemoveSpeedSprint = function(id)
		CMovement.SpeedModifiers.Sprint["efth_speed_" .. id] = nil
		CMovement.UpdateModifiers()
	end;
}
